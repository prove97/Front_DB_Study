-------------------------------1. Basic SELECT----------------------------------

--1.
SELECT DEPARTMENT_NAME AS "학과 명", 
       CATEGORY AS "계열"
FROM TB_DEPARTMENT;

--2.
SELECT DEPARTMENT_NAME || '의 정원은 ' || CAPACITY || '명 입니다.' AS "학과별 정원"
FROM TB_DEPARTMENT;

--3.
SELECT STUDENT_NAME 
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과' 
      AND ABSENCE_YN = 'Y' 
      AND SUBSTR(STUDENT_SSN, 8, 1) IN ('2', '4');

--4.
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079','A513090','A513091','A513110','A513119');

--5.
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

--6.
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

--7.
SELECT * 
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

--8.
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

--9.
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT;

--10.
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'N'
      AND STUDENT_ADDRESS LIKE '%전주%' 
      AND EXTRACT(YEAR FROM ENTRANCE_DATE) = 2002;

-----------------------------2. SELECT - 함수-----------------------------------
--1.
SELECT STUDENT_NO AS "학번",
       STUDENT_NAME AS "이름",
       ENTRANCE_DATE AS "입학년도"
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002'
ORDER BY ENTRANCE_DATE;

--2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE NOT PROFESSOR_NAME LIKE '___';

--3.
SELECT PROFESSOR_NAME AS "교수이름", 
       TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(SUBSTR(PROFESSOR_SSN, 1, 6))) / 12) AS "나이"
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = '1'
ORDER BY TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(SUBSTR(PROFESSOR_SSN, 1, 6))) / 12);

SELECT TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(SUBSTR(PROFESSOR_SSN, 1, 6)))/12)
FROM TB_PROFESSOR;
--***************

--4.
SELECT SUBSTR(PROFESSOR_NAME, 2, 2)
FROM TB_PROFESSOR;

--5.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE TO_NUMBER(TO_CHAR(ENTRANCE_DATE, 'YYYY')) - 
      TO_NUMBER(EXTRACT(YEAR FROM TO_DATE(SUBSTR(STUDENT_SSN, 1, 6), 'RRMMDD'))) > 19;

--6.
SELECT TO_CHAR(TO_DATE('201225'), 'DAY')
FROM DUAL;

--7.
SELECT EXTRACT(YEAR FROM TO_DATE('99/10/11', 'YY/MM/DD')) AS "년", 
       EXTRACT(MONTH FROM TO_DATE('99/10/11', 'YY/MM/DD')) AS "월",
       EXTRACT(DAY FROM TO_DATE('99/10/11', 'YY/MM/DD')) AS "일",
       EXTRACT(YEAR FROM TO_DATE('49/10/11', 'YY/MM/DD')) AS "년", 
       EXTRACT(MONTH FROM TO_DATE('49/10/11', 'YY/MM/DD')) AS "월",
       EXTRACT(DAY FROM TO_DATE('49/10/11', 'YY/MM/DD')) AS "일"
FROM DUAL
UNION
SELECT EXTRACT(YEAR FROM TO_DATE('99/10/11', 'RR/MM/DD')) AS "년", 
       EXTRACT(MONTH FROM TO_DATE('99/10/11', 'RR/MM/DD')) AS "월",
       EXTRACT(DAY FROM TO_DATE('99/10/11', 'RR/MM/DD')) AS "일",
       EXTRACT(YEAR FROM TO_DATE('49/10/11', 'RR/MM/DD')) AS "년", 
       EXTRACT(MONTH FROM TO_DATE('49/10/11', 'RR/MM/DD')) AS "월",
       EXTRACT(DAY FROM TO_DATE('49/10/11', 'RR/MM/DD')) AS "일"
FROM DUAL;

--8.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE NOT STUDENT_NO LIKE 'A%';

--9.
SELECT ROUND(AVG(POINT), 1) AS "평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

--10.
SELECT DEPARTMENT_NO, COUNT(*)
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

--11.
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

--12.
SELECT "년도", ROUND(AVG(POINT), 1) AS "년도 별 평점"
FROM (SELECT SUBSTR(TERM_NO, 1, 4) AS "년도", POINT
      FROM TB_GRADE   
      WHERE STUDENT_NO = 'A112113')
GROUP BY "년도"
ORDER BY "년도";

--13.
SELECT DEPARTMENT_NO, COUNT(DEPARTMENT_NO)
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE ABSENCE_YN = 'Y'
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;


SELECT DEPARTMENT_NO, COUNT(DEPARTMENT_NO)
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

      
--************

--14.
SELECT STUDENT_NAME AS "동일이름", COUNT(*) AS "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME HAVING COUNT(*) > 1;

--15.


SELECT "년도", "학기", ROUND(AVG(POINT), 1) AS "평점"
FROM (SELECT SUBSTR(TERM_NO, 1, 4) AS "년도", 
             SUBSTR(TERM_NO, 5, 2) AS "학기" , POINT
      FROM TB_GRADE   
      WHERE STUDENT_NO = 'A112113')
GROUP BY "년도", "학기"
UNION
SELECT "년도", "학기", ROUND(AVG(POINT), 1)
FROM (SELECT SUBSTR(TERM_NO, 1, 4) AS "년도", 
             SUBSTR(TERM_NO, 5, 2) AS "학기" , POINT
      FROM TB_GRADE   
      WHERE STUDENT_NO = 'A112113')
GROUP BY "년도";



------------------------------3. SELECT - Option--------------------------------
--1.
SELECT STUDENT_NAME AS "학생 이름",
       STUDENT_ADDRESS AS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

--2.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY SUBSTR(STUDENT_SSN, 1, 2) DESC, 
         SUBSTR(STUDENT_SSN, 3, 2) DESC,
         SUBSTR(STUDENT_SSN, 5, 2) DESC;

--3.
SELECT STUDENT_NAME AS "학생이름",
       STUDENT_NO AS "학번",
       STUDENT_ADDRESS AS "거주지 주소"
FROM TB_STUDENT
WHERE STUDENT_ADDRESS LIKE '강원도%' OR STUDENT_ADDRESS LIKE '경기도%'
      AND NOT STUDENT_NO LIKE 'A%'
ORDER BY STUDENT_NAME;

--4.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '법학과'
ORDER BY SUBSTR(PROFESSOR_SSN, 1, 2), 
         SUBSTR(PROFESSOR_SSN, 3, 2),
         SUBSTR(PROFESSOR_SSN, 5, 2);

--5.
SELECT STUDENT_NO, TO_CHAR(POINT, '9.99')
FROM TB_GRADE
WHERE TERM_NO = '200402' AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO;

--6.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

--7.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

--8.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO);

--9.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR CP ON(C.CLASS_NO = CP.CLASS_NO)
JOIN TB_PROFESSOR P ON (CP.PROFESSOR_NO = P.PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON (P.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE CATEGORY = '인문사회';
--*****

--10.
SELECT STUDENT_NO AS "학번", 
       STUDENT_NAME AS "학생 이름", 
       ROUND(AVG(POINT), 1) AS "전체 평점"
FROM TB_GRADE
JOIN TB_STUDENT USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY STUDENT_NO;

--11.
SELECT DEPARTMENT_NAME AS "학과이름", 
       STUDENT_NAME AS "학생이름", 
       PROFESSOR_NAME AS "지도교수이름"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';

--12.
SELECT STUDENT_NAME, TERM_NO
FROM TB_GRADE
JOIN TB_STUDENT USING(STUDENT_NO)
JOIN TB_CLASS USING(CLASS_NO)
WHERE TERM_NO LIKE '2007%'
      AND CLASS_NAME = '인간관계론';

--13.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
WHERE CATEGORY = '예체능'
      AND PROFESSOR_NO IS NULL;


--14.
SELECT STUDENT_NAME AS "학생이름", 
       NVL(PROFESSOR_NAME, '지도교수 미지정') AS "지도교수"
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR P ON (S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO;


--15.
SELECT STUDENT_NO AS "학번", 
       STUDENT_NAME AS "이름",
       DEPARTMENT_NAME AS "학과 이름",
       AVG(POINT) AS "평점"
FROM TB_GRADE
JOIN TB_STUDENT USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) >= 4.0;

--16.
SELECT CLASS_NO, CLASS_NAME, AVG(POINT)
FROM TB_GRADE
JOIN TB_CLASS USING(CLASS_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE CLASS_TYPE LIKE '전공%'
      AND DEPARTMENT_NAME = '환경조경학과'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY CLASS_NO;

--17.
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO 
                       FROM TB_STUDENT
                       WHERE STUDENT_NAME = '최경희');
                       
--18.
SELECT STUDENT_NO, STUDENT_NAME, MAX(AVG(POINT))
FROM (SELECT TB_GRADE, POINT 
      JOIN TB_STUDENT USING(STUDENT_NO)
      JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
      WHERE DEPARTMENT_NAME = '국어국문학과')
GROUP BY STUDENT_NO, STUDENT_NAME;
--******

--19.
SELECT DEPARTMENT_NAME AS "계열 학과명",
       ROUND(AVG(POINT), 1) AS "전공평점"
FROM TB_GRADE
JOIN TB_CLASS USING (CLASS_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE CATEGORY = (SELECT CATEGORY
                   FROM TB_DEPARTMENT
                   WHERE DEPARTMENT_NAME = '환경조경학과')
    AND CLASS_TYPE LIKE '전공%'
GROUP BY DEPARTMENT_NAME
ORDER BY DEPARTMENT_NAME;



-------------------------------------4. DDL-------------------------------------
DROP TABLE TB_CLASS_TYPE;
DROP TABLE TB_CATEGORY;

-- 1.
CREATE TABLE TB_CATEGORY(
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

-- 2.
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) CONSTRAINT CT_NO_PK PRIMARY KEY,
    NAME VARCHAR2(10)
);

--3. 
ALTER TABLE TB_CATEGORY ADD CONSTRAINT CG_NAME_PK PRIMARY KEY(NAME);


--4. 
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;


--5.
ALTER TABLE TB_CATEGORY
    MODIFY NAME VARCHAR2(20);

ALTER TABLE TB_CLASS_TYPE
    MODIFY NO VARCHAR2(10)
    MODIFY NAME VARCHAR2(20);

--6
ALTER TABLE TB_CATEGORY
    RENAME COLUMN NAME TO CATEGORY_NAME;
    
ALTER TABLE TB_CLASS_TYPE
    RENAME COLUMN NO TO CLASS_TYPE_NO;
ALTER TABLE TB_CLASS_TYPE    
    RENAME COLUMN NAME TO CLASS_TYPE_NAME;



--7
ALTER TABLE TB_CATEGORY RENAME CONSTRAINT CG_NAME_PK TO PK_CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME CONSTRAINT CT_NO_PK TO PK_CLASS_TYPE_NAME;


--8
INSERT INTO TB_CATEGORY VALUES('공학', 'Y');
INSERT INTO TB_CATEGORY VALUES('자연과학', 'Y');
INSERT INTO TB_CATEGORY VALUES('의학', 'Y');
INSERT INTO TB_CATEGORY VALUES('예체능', 'Y');
INSERT INTO TB_CATEGORY VALUES('인문사회', 'Y');
COMMIT;

--9


--10
CREATE VIEW VW_학생일반정보(
    NO
    NAME
    ADDRESS
)

--11

--12

--13

--14

--15

SELECT * FROM TB_CATEGORY;
SELECT * FROM TB_CLASS_TYPE;


-----------------------------------5. DML---------------------------------------
--1.

--2.

--3.

--4.

--5.

--6.

--7.

--8.

